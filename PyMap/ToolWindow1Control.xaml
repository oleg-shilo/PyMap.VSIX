<UserControl
    x:Class="CodeMap.ToolWindow1Control"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:CodeMap"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
    x:Name="MyToolWindow"
    d:DesignHeight="300"
    d:DesignWidth="400"
    Background="{DynamicResource {x:Static vsshell:VsBrushes.WindowKey}}"
    FontFamily="{DynamicResource {x:Static vsshell:VsFonts.EnvironmentFontFamilyKey}}"
    FontSize="{DynamicResource {x:Static vsshell:VsFonts.EnvironmentFontSizeKey}}"
    Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
    mc:Ignorable="d">
    <UserControl.Resources>
        <local:BookmarkToBackgroundConverter
            Bookmark1="#80F5CC84"
            Bookmark2="#80ADD8E6"
            Bookmark3="#8090EE90"
            Bookmark4="#80FFB6C1"
            x:Key="BookmarkToBackgroundConverter"/>
        <local:TextLengthToVisibilityConverter x:Key="TextLengthToVisibilityConverter" />
        <local:IdeFontSizeToToolWindowsFontSizeConverter x:Key="IdeFontSizeToToolWindowsFontSizeConverter" />
        <local:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <Style TargetType="{x:Type ContextMenu}">
            <Setter Property="Background" Value="{StaticResource ShadeBrush}" />
            <Setter Property="BorderBrush" Value="{StaticResource ShadeBrush}" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border Uid="Border_93">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="Tag"
                    Value="{DynamicResource
                        {x:Static SystemParameters.DropShadowKey}}"/>
                                    <Style.Triggers>
                                        <DataTrigger
                            Binding="{Binding Tag,
                                RelativeSource={RelativeSource Self}}"
                            Value="True">
                                            <Setter Property="Background"
                            Value="Transparent"/>
                                            <Setter Property="Padding"
                            Value="0,0,5,5"/>
                                            <Setter Property="Effect">
                                                <Setter.Value>
                                                    <DropShadowEffect
                                    BlurRadius="4"
                                    Opacity="0.8"
                                    ShadowDepth="1"/>
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="0"
                Background="{TemplateBinding Background}"
                Uid="Border_50">
                                <ScrollViewer CanContentScroll="True"
                Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer,
                        TypeInTargetAssembly={x:Type FrameworkElement}}}"
                        Uid="ScrollViewer_9">
                                    <ItemsPresenter
                    KeyboardNavigation.DirectionalNavigation="Cycle"
                    Margin="{TemplateBinding Padding}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    Uid="ItemsPresenter_5"/>
                                </ScrollViewer>
                            </Border>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid Background="{Binding ElementName=codeMapList, Path=Background}">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>

        <Grid Margin="0,5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" MaxWidth="120" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>
            <TextBlock
                Margin="5,0"
                VerticalAlignment="Center"
                Foreground="{Binding ElementName=codeMapList, Path=Foreground}"
                Visibility="Collapsed">
                Filter:
            </TextBlock>
            <Image
                Margin="5,0"
                VerticalAlignment="Center"
                Source="{Binding FilterIcon}"
                Stretch="Fill" />
            <TextBox
                Grid.Column="1"
                MinWidth="80"
                VerticalAlignment="Center"
                Background="{Binding ElementName=codeMapList, Path=Background}"
                Foreground="{Binding ElementName=codeMapList, Path=Foreground}"
                Text="{Binding ClassName, UpdateSourceTrigger=PropertyChanged}"
                ToolTip="Class name filter"
                Visibility="{Binding IsCSharp, Converter={StaticResource BoolToVisibilityConverter}}" />

            <TextBlock
                Grid.Column="2"
                Margin="5,0"
                VerticalAlignment="Center"
                Foreground="{Binding ElementName=codeMapList, Path=Foreground}"
                Visibility="{Binding IsCSharp, Converter={StaticResource BoolToVisibilityConverter}}">
                .
            </TextBlock>
            <TextBox
                Grid.Column="3"
                MinWidth="60"
                Margin="0,0,5,0"
                VerticalAlignment="Center"
                Background="{Binding ElementName=codeMapList, Path=Background}"
                Foreground="{Binding ElementName=codeMapList, Path=Foreground}"
                Text="{Binding MemberName, UpdateSourceTrigger=PropertyChanged}"
                ToolTip="Member name filter" />
            <Image
                Grid.Column="4"
                Margin="0,0,7,0"
                VerticalAlignment="Center"
                MouseDown="ClearButton_MouseDown"
                Source="{Binding ClearIcon}"
                Stretch="Fill"
                ToolTip="Clear filter(s)"
                Visibility="Visible" />
            <Image
                Grid.Column="5"
                Width="17"
                Height="17"
                Margin="0,0,5,1"
                MouseDown="SynchButton_MouseDown"
                Source="{Binding SynchIcon}"
                Stretch="Fill"
                ToolTip="Synchronize map tree with the code view"
                Visibility="Visible" />
        </Grid>

        <ListBox
            x:Name="codeMapList"
            Grid.Row="1"
            HorizontalContentAlignment="Stretch"
            BorderThickness="0 0 0 1"
            BorderBrush="{DynamicResource {x:Static vsshell:VsBrushes.CommandBarBorderKey}}"
            Background="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowBackgroundKey}}"
            Foreground="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTextKey}}"
            ItemsSource="{Binding MemberList}"
            d:ItemsSource="{d:SampleData ItemCount=5}"
            PreviewMouseWheel="codeMapList_PreviewMouseWheel">

            <ListBox.ContextMenu>
                <ContextMenu
                    Background="{DynamicResource {x:Static vsshell:VsBrushes.CommandBarMenuIconBackgroundKey}}"
                    Foreground="{DynamicResource {x:Static vsshell:VsBrushes.CommandBarTextActiveKey}}"
                    BorderBrush="{DynamicResource {x:Static vsshell:VsBrushes.CommandBarBorderKey}}"
                    BorderThickness="0"
                    DataContext="{Binding Path=PlacementTarget, RelativeSource={RelativeSource Self}}">
                    <MenuItem Click="MenuItem_Click" Header="Bookmark 1" Tag="Bookmark1" Background="Transparent">
                        <MenuItem.Icon>
                            <Rectangle Width="12" Height="12" Fill="#FFF5CC84" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Click="MenuItem_Click" Header="Bookmark 2" Tag="Bookmark2">
                        <MenuItem.Icon>
                            <Rectangle Width="12" Height="12" Fill="LightBlue" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Click="MenuItem_Click" Header="Bookmark 3" Tag="Bookmark3">
                        <MenuItem.Icon>
                            <Rectangle Width="12" Height="12" Fill="YellowGreen" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Click="MenuItem_Click" Header="Bookmark 4" Tag="Bookmark4">
                        <MenuItem.Icon>
                            <Rectangle Width="12" Height="12" Fill="LightPink" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Click="MenuItem_Click" Header="Clear (node)" Tag="none" />
                    <MenuItem Click="MenuItem_Click" Header="Clear (all)" Tag="none-all" />
                </ContextMenu>
            </ListBox.ContextMenu>

            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="Padding" Value="0 0 0 1" />
                    <Setter Property="Background" Value="{Binding ColorContext, Converter={StaticResource BookmarkToBackgroundConverter}}" />
                </Style>
            </ListBox.ItemContainerStyle>

            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="Transparent">
                        <StackPanel.Resources>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="FontSize" Value="{Binding ElementName=codeMapList, Path=FontSize, Converter={StaticResource IdeFontSizeToToolWindowsFontSizeConverter}}" />
                            </Style>
                        </StackPanel.Resources>
                        <TextBlock Foreground="{x:Null}" Text="{Binding ContentType}" />
                        <Grid>
                            <Image
                                    x:Name="temaplateRoot"
                                    VerticalAlignment="Center"
                                    Source="{Binding TypeIcon}"
                                    Stretch="Uniform" />
                            <Image
                                    VerticalAlignment="Center"
                                    Source="{Binding AccessType}"
                                    Stretch="Uniform" />
                        </Grid>
                        <TextBlock
                                Margin="5,0,5,0"
                                Padding="2,0,3,0"
                                VerticalAlignment="Center"
                                Text="{Binding Content}"
                                Visibility="{Binding Content, Converter={StaticResource TextLengthToVisibilityConverter}}">
                        </TextBlock>
                        <TextBlock
                                Padding="2,0,3,0"
                                VerticalAlignment="Center"
                                FontWeight="{DynamicResource {x:Static vsshell:VsFonts.EnvironmentBoldFontWeightKey}}"
                                Text="{Binding Title}"
                                Visibility="{Binding Title, Converter={StaticResource TextLengthToVisibilityConverter}}">
                        </TextBlock>
                        <TextBlock
                                VerticalAlignment="Center"
                                FontStyle="Italic"
                                FontWeight="Light"
                                Foreground="Gray"
                                Text="{Binding MemberContext}" />
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <TextBox
            Grid.Row="1"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Background="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowBackgroundKey}}"
            BorderBrush="{x:Null}"
            Foreground="Red"
            IsReadOnly="True"
            Text="{Binding ErrorMessage}"
            TextWrapping="WrapWithOverflow"
            Visibility="{Binding IsErrorState, Converter={StaticResource ResourceKey=BoolToVisibilityConverter}}" />

        <Expander
            Grid.Row="2"
            HorizontalAlignment="Left"
            VerticalAlignment="Bottom"
            Background="{Binding ElementName=codeMapList, Path=Background}"
            ExpandDirection="Up"
            FlowDirection="LeftToRight"
            IsExpanded="false"
            ToolTip="Adjust mapping settings">
            <Grid Background="{Binding ElementName=codeMapList, Path=Background}" Margin="0 5 0 0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="8" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.Resources>
                    <Style TargetType="CheckBox">
                        <Setter Property="Margin" Value="10,0,5,0" />
                        <Setter Property="IsEnabled" Value="{Binding IsCSharp}" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="Foreground" Value="{Binding ElementName=codeMapList, Path=Foreground}" />
                    </Style>

                    <Style TargetType="TextBlock">
                        <Setter Property="FontWeight" Value="Medium" />
                        <Setter Property="Margin" Value="10,0,5,0" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="HorizontalAlignment" Value="Right" />
                        <Setter Property="Foreground" Value="{Binding ElementName=codeMapList, Path=Foreground}" />
                    </Style>
                </Grid.Resources>
                <TextBlock
                    Grid.Row="0"
                    Grid.Column="0"
                    Text="Types:"
                    Visibility="{Binding IsCSharp, Converter={StaticResource BoolToVisibilityConverter}}" />

                <CheckBox
                    x:Name="Classes"
                    Grid.Row="0"
                    Grid.Column="1"
                    Click="SettingsChanged"
                    Content="Classes"
                    IsChecked="{Binding Classes}"
                    Visibility="{Binding IsCSharp, Converter={StaticResource BoolToVisibilityConverter}}" />

                <CheckBox
                    x:Name="Interfaces"
                    Grid.Row="0"
                    Grid.Column="2"
                    Click="SettingsChanged"
                    Content="Interfaces"
                    IsChecked="{Binding Interfaces}"
                    Visibility="{Binding IsCSharp, Converter={StaticResource BoolToVisibilityConverter}}" />
                <!--  ##########################################################  -->

                <CheckBox
                    x:Name="Structs"
                    Grid.Row="1"
                    Grid.Column="1"
                    Click="SettingsChanged"
                    Content="Structs"
                    IsChecked="{Binding Structs}"
                    Visibility="{Binding IsCSharp, Converter={StaticResource BoolToVisibilityConverter}}" />

                <CheckBox
                    x:Name="Others"
                    Grid.Row="1"
                    Grid.Column="2"
                    Click="SettingsChanged"
                    Content="Others"
                    IsChecked="{Binding Others}"
                    Visibility="{Binding IsCSharp, Converter={StaticResource BoolToVisibilityConverter}}" />
                <!--  ##########################################################  -->
                <TextBlock
                    Grid.Row="3"
                    Grid.Column="0"
                    Text="Methods:"
                    Visibility="{Binding IsCSharp, Converter={StaticResource BoolToVisibilityConverter}}" />

                <CheckBox
                    x:Name="PublicMethods"
                    Grid.Row="3"
                    Grid.Column="1"
                    Click="SettingsChanged"
                    Content="Public"
                    IsChecked="{Binding PublicMethods}"
                    Visibility="{Binding IsCSharp, Converter={StaticResource BoolToVisibilityConverter}}" />

                <CheckBox
                    x:Name="PrivateMethods"
                    Grid.Row="3"
                    Grid.Column="2"
                    Click="SettingsChanged"
                    Content="Private"
                    IsChecked="{Binding PrivateMethods}"
                    Visibility="{Binding IsCSharp, Converter={StaticResource BoolToVisibilityConverter}}" />
                <!--  ##########################################################  -->
                <TextBlock
                    Grid.Row="4"
                    Grid.Column="0"
                    Text="Properties:"
                    Visibility="{Binding IsCSharp, Converter={StaticResource BoolToVisibilityConverter}}" />

                <CheckBox
                    x:Name="PublicProperties"
                    Grid.Row="4"
                    Grid.Column="1"
                    Click="SettingsChanged"
                    Content="Public"
                    IsChecked="{Binding PublicProperties}"
                    Visibility="{Binding IsCSharp, Converter={StaticResource BoolToVisibilityConverter}}" />

                <CheckBox
                    x:Name="PrivateProperties"
                    Grid.Row="4"
                    Grid.Column="2"
                    Click="SettingsChanged"
                    Content="Private"
                    IsChecked="{Binding PrivateProperties}"
                    Visibility="{Binding IsCSharp, Converter={StaticResource BoolToVisibilityConverter}}" />

                <!--  ##########################################################  -->

                <TextBlock
                    Grid.Row="5"
                    Grid.Column="0"
                    Text="Fields:"
                    Visibility="{Binding IsCSharp, Converter={StaticResource BoolToVisibilityConverter}}" />

                <CheckBox
                    x:Name="PublicFields"
                    Grid.Row="5"
                    Grid.Column="1"
                    Click="SettingsChanged"
                    Content="Public"
                    IsChecked="{Binding PublicFields}"
                    Visibility="{Binding IsCSharp, Converter={StaticResource BoolToVisibilityConverter}}" />

                <CheckBox
                    x:Name="PrivateFields"
                    Grid.Row="5"
                    Grid.Column="2"
                    Click="SettingsChanged"
                    Content="Private"
                    IsChecked="{Binding PrivateFields}"
                    Visibility="{Binding IsCSharp, Converter={StaticResource BoolToVisibilityConverter}}" />

                <CheckBox
                    x:Name="SortMembers"
                    Grid.Row="6"
                    Grid.Column="1"
                    Click="SettingsChanged"
                    Content="Sort"
                    IsChecked="{Binding SortMembers}"
                    IsEnabled="True" />

                <CheckBox
                    x:Name="AutoSynch"
                    Grid.Row="6"
                    Grid.Column="2"
                    Click="SettingsChanged"
                    Content="Auto-Sync"
                    IsChecked="{Binding AutoSynch}"
                    IsEnabled="True"
                    ToolTip="Auto-synchronize map tree with the code view on the change of the caret position." />
                <CheckBox
                    x:Name="ShowMethodSignatures"
                    Grid.Row="7"
                    Grid.Column="1"
                    Grid.ColumnSpan="2"
                    Click="SettingsChanged"
                    Content="Method parameters"
                    IsChecked="{Binding ShowMethodSignatures}"
                    IsEnabled="True"
                    ToolTip="Show method parameters in the signature." />
            </Grid>
        </Expander>
    </Grid>
</UserControl>